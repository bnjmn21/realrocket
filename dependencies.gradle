dependencies {
    compileOnly(libs.jetbrains.annotations)

    // LDLib
    jarJar(modApi(forge.ldlib.get()))

    // Registrate
    jarJar(modApi(forge.registrate.get()))

    // Configuration
    jarJar(modApi(forge.configuration.get()))

    modImplementation(forge.gtceu)

    // Mixin (& Extras)
    annotationProcessor(variantOf(libs.mixin) { classifier("processor") })
    compileOnly(annotationProcessor(forge.mixinExtras.common.get()))
    jarJar(api(forge.mixinExtras.forge.get())).version {
        require("[${forge.versions.mixinExtras.get()},)")
    }

    // Recipe Viewers
    modCompileOnly(forge.bundles.jei)
    modCompileOnly(forge.bundles.rei)
    modCompileOnly(forge.emi)

    // WAILA-likes
//    modCompileOnly(forge.theoneprobe)
    modCompileOnly(forge.jade)

    // Curios
//    modCompileOnly(variantOf(forge.curios) { classifier("api") })

    // AE2
    modCompileOnly(forge.ae2)
//    modCompileOnly(forge.ae2wtlib)

    // Create
    modCompileOnly(forge.ponder)
    modCompileOnly(variantOf(forge.create) { classifier("slim") })
    modCompileOnly(forge.flywheel.forge.api)

    // KJS
    modCompileOnly(forge.kubejs)
    modCompileOnly(forge.architectury)
    modCompileOnly(forge.rhino)

    // Shimmer
//    modCompileOnly(forge.shimmer)
//    modCompileOnly(forge.embeddium)
//    modCompileOnly(forge.oculus)
//    modCompileOnly(forge.modernfix)

    // Teams
//    modCompileOnly(forge.ftblibrary)
//    modCompileOnly(forge.ftbteams)
//    modCompileOnly(forge.ftbquests)
//    modCompileOnly(forge.resourcefullib)
//    modCompileOnly(forge.argonauts)
//    modCompileOnly(forge.heracles)

    // Maps
//    modCompileOnly(forge.ftbchunks)
//    modCompileOnly(forge.xaerosminimap)
//    modCompileOnly(forge.xaerosworldmap)
//    modCompileOnly(forge.journeymap.api)
//    modCompileOnly(forge.journeymap.forge)

    // GameStages
//    modCompileOnly(forge.gamestages)

    // CC: Tweaked
//    modCompileOnly(forge.cc.tweaked.core.api)
//    modCompileOnly(forge.cc.tweaked.forge.api)

    // Standard runtime mods //
    modLocalRuntime(forge.jade)
    modLocalRuntime(forge.ae2)
    modLocalRuntime(forge.spark)
//    modLocalRuntime(forge.modernfix)

    // Runtime Recipe Viewers - uncomment whichever one you want to use //
    modLocalRuntime(forge.emi)
//    modLocalRuntime(forge.jei.forge.impl)
//    modLocalRuntime(forge.bundles.rei.runtime)

    // Client-only runtime mods //
//    modClientLocalRuntime(forge.embeddium)
//    modClientLocalRuntime(forge.oculus)
//    renderNurseCfg(libs.renderNurse)

    //////////////////////////////////////////////////////
    // Runtime mods for dev testing with unclean client //
    //////////////////////////////////////////////////////
//    modExtraLocalRuntime(forge.javd)
//    modExtraLocalRuntime(forge.trenzalore)
//    modExtraLocalRuntime(forge.curios)
//    modExtraLocalRuntime(forge.worldstripper)
//    modExtraLocalRuntime(forge.cc.tweaked.forge.impl) for some reason this breaks create

//    modExtraLocalRuntime(forge.bundles.kjs)
    modLocalRuntime(forge.bundles.kjs)
//
//    modExtraLocalRuntime(forge.ftblibrary)
//    modExtraLocalRuntime(forge.ftbteams)
//    modExtraLocalRuntime(forge.ftbquests)

//    modExtraLocalRuntime(forge.heracles)
//    modExtraLocalRuntime(forge.resourcefullib)

    modLocalRuntime(forge.xaerosminimap)
    modLocalRuntime(forge.xaerosworldmap)
//    modExtraLocalRuntime(forge.journeymap.forge)
//    modExtraLocalRuntime(forge.ftbchunks)

//    modExtraLocalRuntime(forge.gamestages)
//    modExtraLocalRuntime(forge.bookshelf)

    modLocalRuntime(forge.kotlinforforge)
    modLocalRuntime(forge.observable)

    modLocalRuntime(forge.ponder)
    modLocalRuntime(variantOf(forge.create) { classifier("slim") })
    modLocalRuntime(forge.flywheel.forge)
}